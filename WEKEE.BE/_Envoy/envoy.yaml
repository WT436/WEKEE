admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 2900
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 3100
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/weatherforecast"
                route:
                  prefix_rewrite: "/weatherforecast"
                  cluster: secure_apione_service
              - match:
                  prefix: "/aeatherforecast"
                route:
                  prefix_rewrite: "/aeatherforecast"
                  cluster: apitwo_service
          http_filters:
          - name: envoy.filters.http.router
  - name: listener_1
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 3200
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/weatherforecast"
                route:
                  prefix_rewrite: "/weatherforecast"
                  cluster: secure_apione_service
              - match:
                  prefix: "/aeatherforecast"
                route:
                  prefix_rewrite: "/aeatherforecast"
                  cluster: apitwo_service
          http_filters:
          - name: envoy.filters.http.router
      tls_context:
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/etc/ssl/certs/https.crt"
              private_key:
                filename: "/etc/ssl/certs/key.pem"
  clusters:
  # - name: apione_service
  #   connect_timeout: 0.25s
  #   type: LOGICAL_DNS
  #   # Comment out the following line to test on v6 networks
  #   dns_lookup_family: V4_ONLY
  #   lb_policy: ROUND_ROBIN
  #   load_assignment:
  #     cluster_name: apione_service
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               address: apione
  #               port_value: 480
  - name: secure_apione_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: secure_apione_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: apione
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: localhost            
  - name: apitwo_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: apitwo_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: apitwo
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: localhost 